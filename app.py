import tkinter as tk
import sounddevice as sd
import queue
import json
import threading
from vosk import Model, KaldiRecognizer

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
SAMPLE_RATE = 16000
MODEL_PATH = "model"  # –ü–∞–ø–∫–∞ —Å –º–æ–¥–µ–ª—å—é

# === –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ ===
print("üîÑ –ó–∞–≥—Ä—É–∂–∞—é –º–æ–¥–µ–ª—å Vosk...")
model = Model(MODEL_PATH)
recognizer = KaldiRecognizer(model, SAMPLE_RATE)
q = queue.Queue()

# === –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ ===
def audio_callback(indata, frames, time, status):
    q.put(bytes(indata))

def listen():
    with sd.RawInputStream(samplerate=SAMPLE_RATE, blocksize=8000, dtype='int16',
                           channels=1, callback=audio_callback):
        print("üéß –°–ª—É—à–∞—é... –ì–æ–≤–æ—Ä–∏!")
        while True:
            data = q.get()
            if recognizer.AcceptWaveform(data):
                result = json.loads(recognizer.Result())
                text = result.get("text", "")
                update_subtitle(text)

# === GUI (Tkinter) ===
root = tk.Tk()
root.title("üü° –†–µ—á–µ–≤—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã (offline)")
root.geometry("800x200")
root.configure(bg="black")

label = tk.Label(root, text="üé§ –ì–æ–≤–æ—Ä–∏—Ç–µ...", font=("Helvetica", 24), fg="lime", bg="black", wraplength=760, justify="center")
label.pack(expand=True)

def update_subtitle(text):
    label.config(text=text)

# === –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ ===
threading.Thread(target=listen, daemon=True).start()

# === –ó–∞–ø—É—Å–∫ –æ–∫–Ω–∞ ===
root.mainloop()
